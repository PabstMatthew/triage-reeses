#include "cache.h"
#include "reeses/reeses_practical.h"

reeses::ReesesPrefetcher reeses_prefetcher[NUM_CPUS];

void CACHE::l2c_prefetcher_initialize() {
    reeses_prefetcher[cpu].initialize(this, true);
}

void CACHE::l2c_prefetcher_operate(uint64_t addr, uint64_t ip, uint8_t cache_hit, uint8_t type) {
    reeses_prefetcher[cpu].operate(addr, ip, cache_hit, type);
}

void CACHE::l2c_prefetcher_cache_fill(uint64_t addr, uint32_t set, uint32_t way, uint8_t prefetch, uint64_t evicted_addr) {
    reeses_prefetcher[cpu].cache_fill(addr, set, way, prefetch, evicted_addr);
}

void CACHE::l2c_prefetcher_final_stats() {
    reeses_prefetcher[cpu].final_stats();
}

void CACHE::complete_metadata_req(uint64_t metadata_addr) {
    reeses_prefetcher[cpu].complete_metadata_req(metadata_addr);
}

